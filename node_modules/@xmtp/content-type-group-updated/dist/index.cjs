'use strict';

var contentTypePrimitives = require('@xmtp/content-type-primitives');
var proto = require('@xmtp/proto');

const ContentTypeGroupUpdated = new contentTypePrimitives.ContentTypeId({
    authorityId: "xmtp.org",
    typeId: "group_updated",
    versionMajor: 1,
    versionMinor: 0,
});
class GroupUpdatedCodec {
    get contentType() {
        return ContentTypeGroupUpdated;
    }
    encode(content) {
        return {
            type: this.contentType,
            parameters: {},
            content: proto.mlsTranscriptMessages.GroupUpdated.encode(content).finish(),
        };
    }
    decode(content) {
        return proto.mlsTranscriptMessages.GroupUpdated.decode(content.content);
    }
    fallback() {
        return undefined;
    }
    shouldPush() {
        return false;
    }
}

exports.ContentTypeGroupUpdated = ContentTypeGroupUpdated;
exports.GroupUpdatedCodec = GroupUpdatedCodec;
//# sourceMappingURL=index.cjs.map
